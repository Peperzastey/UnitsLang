calculated_work = (mass * 2 * area * 2.3km) \
    / (length * 5min * 2 000us)
length = 2cm
width = 500 m
area = 14m2 + (length * width) - 10N / 6Pa
mass = 23 001 250.5mg
acc = 2 m/s2
dist = acc * 0.5h * 2s
speed = dist * 15Hz
pressure1 = 5kg/(m*s2)
pressure2 = 14 432 kg/m/s2
while area < 2m2 {
    width = width * 1.5
    area = length * width
}
// parametry funkcji przekazywane są przez wartość
func fibonacci_meters (steps [1]) -> m {
    // indentacja bloku nie jest wymagana
    if steps == 0 {
        return 0m
    } else if steps == 1 {
        return 1m
    } else {
        // rekursja
        return fibonacci_meters(steps - 1) + fibonacci_meters(steps - 2)
    }
}
func fibonacci_speed_iterative (steps [1]) -> m/s {
    // zmienne lokalne
    elem0 = 0m/s
    elem1 = 1m/s
    while steps > 0 {
        temp = elem1
        elem1 = elem0 + elem1
        elem0 = elem1
        steps--
        // ++ i -- możliwe tylko dla wartości bez jednostek ([1])
    }
    return elem1
}
meters_after_16_steps = fibonacci_meters(16)
distance[m] = fibonacci_speed_iterative(20) * 16s
if area > 3m2 {
    print( "Area is way too big" )
} else if area > 2.5m2 {
    print( "Area is slightly too big" )
} else {
    print( "Area is acceptable" )
}
print( "Powierzchnia wynosi {area}, czyli {area in cm2}" )
print( "Escapowanie: \{ 1Pa = 1N/1m2 \} \"ciśnienie\"" )


Ala ma kota
Kot ma Ale
// wielki kot
     Ogry maja          warstwy

     123456.543
     2345
     1 000 000.54
     22 123
     _ala++ pies--
    // 333 123 123 567.123456  // zakresy!
    333 123 123.12345678  / 12 * 0.32 \     
  + 100 - kot2_
  \

 whilea while awhile if 
 _a123_43

Koniec