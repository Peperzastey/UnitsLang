func fibonacci_meters (steps [1]) -> [m] {
    if steps == 0 {
        return 0[m]
    } elif steps == 1 {
        return 1[m]
    } else {
        return fibonacci_meters(steps - 1) + fibonacci_meters(steps - 2)
    }
}

func fibonacci_iterative (steps [1]) -> [1] {
    elem0 = 0
    elem1 = 1
    count = 1
    while count < steps {
        elem1 = elem1 + elem0
        elem0 = elem1 - elem0
        count = count + 1
    }
    return elem1
}

a = fibonacci_meters(20)
print("Fibonacci meters of 20 is {a}")

if a == fibonacci_iterative(20) * 1[m] {
    print("Jenostki sie zgadzaja")
}

cos       = 5[kg/(m*s2)]
tyle_samo = 5[kg/m/s/s]
tez_tyle  = 2[kg/s] * 2.5[m2/s] / 3[m3] * 3

if cos != tyle_samo {
    print("To sie nie wyswietli")
} elif cos != tez_tyle {
    print("To tez nie")
} else {
    print("Wszystko jest tyle samo:")
    print("\t{cos}")
    print("\t{tyle_samo}")
    print("\t{tez_tyle}")
}

wysokosc = 1 231.3[m]
// opcjonalne oznaczenie typu
objetosc[m3] = wysokosc * 0.5[m] * 13[m]
print("Objetosc = {objetosc}")
